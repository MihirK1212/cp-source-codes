int find(const vector<int>&A,int lb,int ub,int x)
{
    int mid;
    while(lb<=ub)
    {
        mid = lb+(ub-lb)/2;
        if(A[mid]==x){return mid;}
        else if(A[mid]>x){ub=mid-1;}
        else{lb=mid+1;}
    }
    return -1;
}
int Solution::search(const vector<int> &A, int B)
{
    int n = A.size();
    int lb = 0 ,ub = n-1,mid;
    int min_ind;
    while(lb<=ub)
    {
        mid = lb+(ub-lb)/2;
        
        if((mid>lb && A[mid-1]>A[mid]))
        {
            min_ind=mid;
            break;
        }

        else if(mid<ub && A[mid]>A[mid+1])
        {
            min_ind=mid+1;
            break;
        }
        
        else if(lb==ub)
        {
            min_ind=lb;
            break;
        }

        if(A[ub]<A[mid])
        {
            lb=mid+1; 
        }
        else
        {
            ub=mid-1;
        }
    }

 
    if(B>=A[min_ind] && B<=A[n-1]){lb=min_ind; ub=n-1;}
    else{lb=0; ub=min_ind-1;}

    return find(A,lb,ub,B);
}
