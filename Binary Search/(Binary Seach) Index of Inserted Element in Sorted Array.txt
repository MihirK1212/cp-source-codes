class Solution {
public:
    int searchInsert(vector<int>& arr, int target) {
        
        int n = arr.size();
        int lb=0,ub=n-1,mid;
        int floor_ans=-1;
        int srch_num = target;

        while(lb<=ub)
        {
            mid = lb + (ub-lb)/2;
            if(arr[mid]<srch_num)
            {
                floor_ans=max(floor_ans,arr[mid]);
                lb=mid+1;
            }
            else if(arr[mid]>=srch_num)
            {
                ub=mid-1;
            }
        }
        
        if(floor_ans==-1)
        {
            return 0;
        }
        
        srch_num = floor_ans;
        lb=0;
        ub=n-1;

        while(lb<=ub)
        {
            mid = lb + (ub-lb)/2;
            if(srch_num<arr[mid])
            {
                ub=mid-1;
            }
            else if(srch_num>arr[mid])
            {
                lb=mid+1;
            }
            else
            {
                return (mid+1);
                break;
            }
        }
        return 0;
    }
};