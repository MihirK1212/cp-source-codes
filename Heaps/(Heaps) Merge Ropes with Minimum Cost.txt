long long minCost(long long arr[], long long n) 
{
        priority_queue<long long,vector<long long>,greater<long long>> min_h;
        
        long long sum=0;
        
        if(n==1){return 0;}
        
        for(int i=0;i<n;i++)
        {
            min_h.push(arr[i]);
            sum+=arr[i];
        }
        
        long long cost=0;
        
        while(min_h.size()!=0)
        {
            long long count=0,curr_cost=0;
            while(min_h.size()!=0 && count!=2)
            {
                curr_cost+=min_h.top(); min_h.pop(); count++;
            }
            cost+=curr_cost;
	    if(curr_cost==sum){break;}
            min_h.push(curr_cost);
            
        }
        
        return cost;
   }