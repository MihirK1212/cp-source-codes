/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> ans;
    
    void findPaths(TreeNode* root,int sum,vector<int> &path)
    {
        if(root==NULL){return;}
        
        path.push_back(root->val);
        sum-=(root->val);
        
        if((root->left)==NULL && (root->right)==NULL && sum==0){ans.push_back(path);}
        
        if((root->left)!=NULL){findPaths(root->left,sum,path);}
        if((root->right)!=NULL){findPaths(root->right,sum,path);}
        
        path.pop_back();
    }
    
    
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) 
    {
        if(root==NULL){return ans;}
        
        vector<int> path;
        findPaths(root,targetSum,path);
        
        return ans;
    }
};