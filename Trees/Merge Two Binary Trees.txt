/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */




class Solution {
public:
    TreeNode* merge(TreeNode* root,TreeNode* root1,TreeNode* root2)
    {
        int v1=0,v2=0;
        TreeNode* l1=NULL;
        TreeNode* r1=NULL;
        TreeNode* l2=NULL;
        TreeNode* r2=NULL;
        
        if(root1==NULL && root2==NULL){return NULL;}
        
        if(root1!=NULL){v1=root1->val; l1=root1->left; r1=root1->right;}
        if(root2!=NULL){v2=root2->val; l2=root2->left; r2=root2->right;}
        
        root->val = v1+v2;
        root->left = merge(new TreeNode(),l1,l2);
        root->right = merge(new TreeNode(),r1,r2);
        
        return root;
    }
    
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) 
    {
        TreeNode* root = merge(new TreeNode(),root1,root2);
        return root;
    }
};