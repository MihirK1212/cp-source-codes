#include <bits/stdc++.h>
using namespace std;

#define f first
#define s second
#define pb push_back
#define printoneline(arr) for(long long i=0;i<arr.size();i++){cout<<arr[i]<<" ";}c cout<<"\n";
#define all(x) (x).begin(), (x).end()
#define reverse(a) reverse(a.begin(),a.end());
#define input(arr) for(long long i=0;i<arr.size();i++){cin>>arr[i];}
#define cy cout<<"YES\n";
#define cn cout<<"NO\n";
#define cig cin.ignore();
typedef long long ll;
typedef long double  ld;
typedef vector<long long> vll;
typedef vector<int> vi;
typedef vector<pair<ll,ll>> vpll;
typedef vector<pair<int,int>> vpii;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef pair<int,pair<int,int>> ppi;

ll inf=std::numeric_limits<long long>::max();

ll ceilVal(ll a,ll b)
{
   return ceil(((ld)a)/((ld)b)); 
}

void setIO(string name = "") 
{ 
    ios_base::sync_with_stdio(0); cin.tie(0); 
    
    if(name!="")
    {
        freopen((name+".in").c_str(), "r", stdin);
	    freopen((name+".out").c_str(), "w", stdout);
    }
}

pll findIndDir(vll&a,ll n)
{
    if(a[0]>a[1]){return {0,1};}
    else if(a[n-1]<a[n-2]){return {n-1,-1};}
    
    for(ll i=2;i<=(n-2);i++)
    {
        if(a[i-1]<=a[i+1] && a[i]>a[i-1] && a[i]>a[i+1]){return {i,1};}
        if(a[i-1]<=a[i+1] && a[i]<a[i-1] && a[i]<a[i+1]){return {i,-1};}
    }
    
    return {0,0};
}

bool sorted(vll&a)
{
    ll n = a.size();
    for(ll i=0;i<=(n-2);i++){if(a[i]>a[i+1]){return false;}}
    return true;
}


ll solve()
{
    ll n,i;
    cin>>n;
    
    vll a(n);
    input(a);
    
    pll res = findIndDir(a,n);
    
    ll ind = res.f , dir = res.s;
    ll misplaced = a[ind];
    
    if(dir==1)
    {
        ll ans = 0;
        i = ind + 1;
        ll curr = ind;
        
        while(i<n)
        {
            if(a[i]>=misplaced && sorted(a)){return ans;}
            
            ll x = a[i];
            ll last_ind = i;
            
            while(i<n && a[i]==x){last_ind=i; i++;}
            swap(a[curr],a[last_ind]);
            curr = last_ind;
            ans++;
        }
        
        return ans;
    }
    else if(dir==-1)
    {
        ll ans = 0;
        i = ind - 1;
        ll curr = ind;
        
        while(i>=0)
        {
            if(a[i]<=misplaced && sorted(a)){return ans;}
            
            ll x = a[i];
            ll last_ind = i;
            
            while(i>=0 && a[i]==x){last_ind=i; i--;}
            swap(a[curr],a[last_ind]);
            curr = last_ind;
            ans++;
        }
        
        return ans;
    }
    
    return 0;
}

int main()
{
    setIO("outofplace");
    // setIO("");
    
    //http://www.usaco.org/index.php?page=viewproblem2&cpid=785
    
    ll T = 1;
    // cin>>T;
    
    while(T--)
    {
        cout<<solve()<<"\n";
    }
    
    return 0;
}
