// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
/*You are required to complete this method*/

// arr[] : the input array containing 0s and 1s
// N : size of the input array

// return the maximum length of the subarray
// with equal 0s and 1s
class Solution{
  public:
    int maxLen(int arr[], int n)
    {
        unordered_map<int,int> posDiff;
        
        int count0=0,count1=0;
        int ans = 0;
        
        for(int i=0;i<n;i++)
        {
            count0+=(arr[i]==0); count1+=(arr[i]==1);
            int diff = count0-count1;
            
            if(diff==0)
            {
                ans = i+1;
                if(posDiff[diff]==0){posDiff[diff]=i+1;}
                continue;
            }
            
            if(posDiff[diff]>0)
            {
                ans = max(ans,i+1-posDiff[diff]);
            }
            else
            {
                posDiff[diff]=i+1;
            }
        }
        
        return ans;
    }
};


// { Driver Code Starts.

int main()
{
    // your code goes here
    int T;
    cin >> T;
    while (T--)
    {
        int n;
        cin >> n;
        int a[n];
        for (int i = 0; i < n; i++)
            cin >> a[i];
        Solution obj;
        cout << obj.maxLen(a, n) << endl;
    }
    return 0;
}  // } Driver Code Ends