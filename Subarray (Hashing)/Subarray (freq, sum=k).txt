#include <bits/stdc++.h>
using namespace std;

#define ll long long 
#define vll vector<long long>
#define f first
#define s second
#define pb push_back
#define printoneline(arr) for(long long i=0;i<arr.size();i++){cout<<arr[i]<<" ";} cout<<"\n";
#define sort(a) sort(a.begin(),a.end());
#define rsort(a) sort(a.rbegin(),a.rend());
#define reverse(a) reverse(a.begin(),a.end());

//Given an array of n integers, your task is to count the number of subarrays having sum x

int main()
{
    ll n,i,x,curr_p_sum=0,count=0;
    
    cin>>n>>x;
    vll a(n);
                
    map<ll,ll> freq_psums;
    
    //freq_psums[sum]=number prefix_sums=sum
    
    freq_psums[0]=1;
            
    for(i=0;i<n;i++)
    {
        cin>>a[i];
        curr_p_sum+=a[i];
        count+=freq_psums[curr_p_sum-x];  
        
        /*adds the number of prefix sums before (may be the prefix sum with 0 elements) the current prefix sum
        with value= current_p_sum-x thus we can take those prefix sums out from the current_prefix_sum to get x
        */
        
        freq_psums[curr_p_sum]++;
    }
    
    cout<<count<<"\n";
    
    return 0;
}
