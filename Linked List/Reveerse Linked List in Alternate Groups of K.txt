/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 
ListNode* helper(ListNode* A , int B , bool rev)
{
    if(!A){return A;}
    
    int temp = B;
    
    if(!rev)
    {
        ListNode *tail , *nextHead = A;
        while(B-- && nextHead){tail = nextHead; nextHead = nextHead->next;}
        tail->next = helper(nextHead , temp , !rev );
        return A;
    }
    else
    {
        ListNode *curr = A , *prev = NULL , *next;
        
        while(B-- &&  curr)
        {
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        
        A->next = helper(next , temp , !rev);
        return prev;
    }
}
ListNode* Solution::solve(ListNode* A, int B) 
{
    return helper(A, B , true);
}
