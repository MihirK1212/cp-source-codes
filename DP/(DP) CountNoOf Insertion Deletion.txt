// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution{
		

	public:
	int minOperations(string str1, string str2) 
	{ 
	    int m = str1.length();
	    int n = str2.length();
	    int dp[m+1][n+1];
	    memset(dp,0,sizeof(dp));
	    
	 
	   int insertions,deletions;
	    
	    for(int i=1;i<=m;i++)
	    {
	        for(int j=1;j<=n;j++)
	        {
	            if(str1[i-1]==str2[j-1])
	            {
	                dp[i][j] = dp[i-1][j-1]+1;
	            }
	            else
	            {
	                dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
	            }
	        }
	    }
	    
	   // cout<<dp[m][n]<<"\n";
	    
	    deletions = m - dp[m][n]; //Convert str1 to lcs
	    insertions = n - dp[m][n]; //Convert lcs to str2
	    
	    return insertions+deletions;
	} 
};

// { Driver Code Starts.
int main() 
{
   	
   
   	int t;
    cin >> t;
    while (t--)
    {
        string s1, s2;
        cin >> s1 >> s2;

	    Solution ob;
	    cout << ob.minOperations(s1, s2) << "\n";
	     
    }
    return 0;
}

  // } Driver Code Ends