class Solution {
public:
    /*
    count palindromic subsequences (not necessarily distinct of the given string)
    Input : str = "aab"
    Output : 4
    Explanation :- palindromic subsequence are :"a", "a", "b", "aa"
    */
    
    int countPalindromicSubsequences(string A)
    {
        int n = A.length();
        
        vector<vector<int>> dp(n,vector<int>(n,0));
        
        for(int i=0;i<n;i++)
        {
            dp[i][i] = 1;
            if(i<=(n-2)){dp[i][i+1] = 2;}
        }
        
        for(int len=3;len<=n;len++)
        {
            for(int i=0;(i+len-1)<n;i++)
            {
                int j = i + len - 1;
                
                if (A[i] == A[j])
                {
                    dp[i][j] = dp[i][j - 1] + dp[i + 1][j] + 1;
                }
                    
                else
                {
                    dp[i][j] = dp[i][j - 1] + dp[i + 1][j] - dp[i + 1][j - 1];
                }
            }
        }
        
        
        return dp[0][n-1];
    }
};