// https://www.interviewbit.com/problems/regular-expression-ii/
int Solution::isMatch(const string A, const string B) 
{
    int m = A.length();
    int n = B.length();

    vector<vector<bool>> dp(m+1,vector<bool>(n+1,false));

    dp[0][0] = true;

    for(int i=1;i<=m;i++){dp[i][0]=false;}

    for(int j=2;j<=n;j+=2)
    {
        if(B[j-1]=='*'){dp[0][j]=true;}
        else{break;}
    }

    for(int i=1;i<=m;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(A[i-1]==B[j-1] || B[j-1]=='.')
            {
                dp[i][j] = dp[i-1][j-1];
            }
            else if(B[j-1]=='*' && (A[i-1]==B[j-2] || B[j-2]=='.'))
            {
                dp[i][j] = dp[i-1][j] || dp[i][j-2] || dp[i-1][j-2];
            }
            else if(B[j-1]=='*')
            {
                dp[i][j] = dp[i][j-2];
            }
            else
            {
                dp[i][j] = false;
            }
        }
    }

    // for(int i=0;i<=m;i++)
    // {
    //     for(int j=0;j<=n;j++){cout<<dp[i][j]<<" ";}
    //     cout<<"\n";
    // }

    return dp[m][n];
}
