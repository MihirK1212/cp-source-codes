int find(vector<int>&A,int i,int j,vector<vector<int>>&dp)
{
    int n = A.size();

    if(i<0 || j<0 || i>=n || j>=n || i>=j){return 0;}
    if((j-i)==1){return A[i]+A[j];}
    if(dp[i][j]>=0){return dp[i][j];}

    int ans = INT_MAX;

    int tot = 0;
    for (int k = i; k <= j; k++)
        tot += A[k];

    for (int k=i;k<=(j-1);k++) 
    {
        ans=min(ans,tot + find(A,i,k,dp)+find(A,k+1,j,dp));
    }

    dp[i][j] = ans;
    return ans;
}
int Solution::solve(vector<int> &A)
{
    int n = A.size();
    
    if(n==1){return 0;}
    if(n==2){return A[0]+A[1];}

    vector<vector<int>> dp(n,vector<int>(n,-1));

    return find(A,0,n-1,dp);   
}
