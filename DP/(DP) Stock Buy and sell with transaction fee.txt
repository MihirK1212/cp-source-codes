// https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/
class Solution {
public:
    int maxProfit(vector<int>& price, int fee) 
    {
        int n = price.size();
        
        if(n==1){return 0;}
        
        vector<int> buy(n);
        vector<int> sell(n);
        
        //buy[i] = maximum profit for A[0...i] if last transaction is buying
        //sell[i] = maximum profit for A[0...i] if last transaction is selling
        //buying and selling is not necessarily of the ith stock
        
        buy[0]  = -price[0];
        sell[0] = 0;
        
        buy[1]  = max(buy[0],-price[1]);
        sell[1] = max(0,price[1]-price[0] - fee); 
            
        for (int i=2;i<n;i++) 
        {
            buy[i]  = max(buy[i-1] , sell[i-1] - price[i]);
            sell[i] = max(sell[i-1], buy[i-1] + price[i] - fee);
        }
        
        return max(buy[n-1],sell[n-1]);
    }
};