int findCeil(vector<int>&arr,int x)
    {
        int lb=0,ub=arr.size()-1,mid;
        int ans;
        
        while(lb<=ub)
        {
            mid = lb + (ub-lb)/2;
            
            if(arr[mid]>=x){ans=mid; ub=mid-1;}
            else{lb=mid+1;}
        }
        
        return ans;
    }
    //Function to find length of longest increasing subsequence.
    int longestSubsequence(int n, int a[])
    {
       vector<int> tail;
       int ind;
       
       for(int i=0;i<n;i++)
       {
           if(tail.size()==0 || a[i]>tail.back())
           {
               tail.push_back(a[i]);
           }
           else
           {
               tail[findCeil(tail,a[i])]=a[i];
           }
       }
       
       return tail.size();
    }