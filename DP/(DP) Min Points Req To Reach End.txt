// https://www.interviewbit.com/problems/dungeon-princess/

int Solution::calculateMinimumHP(vector<vector<int> >&A) 
{   
    int m = A.size();
    int n = A[0].size();

    vector<vector<int>> dp(m,vector<int>(n,0));

    //dp[i][j] = min initial points req to reach (m-1,n-1) if we start at (i,j)

    if(A[m-1][n-1]>=0){dp[m-1][n-1] = 1;}
    else{dp[m-1][n-1] = abs(A[m-1][n-1]) + 1;}

    for(int i=m-2;i>=0;i--)
    {
        if(A[i][n-1]>=0)
        {
            dp[i][n-1] = max(1,dp[i+1][n-1] - A[i][n-1]);
        }
        else
        {
            dp[i][n-1] = dp[i+1][n-1] + abs(A[i][n-1]);
        }
    }
    for(int j=n-2;j>=0;j--)
    {
        if(A[m-1][j]>=0)
        {
            dp[m-1][j] = max(1,dp[m-1][j+1] - A[m-1][j]);
        }
        else
        {
            dp[m-1][j] = dp[m-1][j+1] + abs(A[m-1][j]);
        }
    }

    for(int i=m-2;i>=0;i--)
    {
        for(int j=n-2;j>=0;j--)
        {
            dp[i][j] = max(1, min(dp[i+1][j],dp[i][j+1]) - A[i][j]);
        }
    }

    return dp[0][0];
}
