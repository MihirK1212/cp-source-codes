/* https://www.interviewbit.com/problems/maximum-path-in-triangle/
Given a 2D integer array A of size  N * N   representing a triangle of numbers.
Find the maximum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.
NOTE:
Adjacent cells to cell (i,j) are only (i+1,j) and (i+1,j+1)
Row i contains i integer and n-i zeroes for all i in [1,n] where zeroes represents empty cells.
*/
int Solution::solve(vector<vector<int> > &A) 
{
    int n = A.size();

    int dp[n+1][n+1];

    for(int i=n-1;i>=0;i--)
    {
        for(int j=i;j>=0;j--)
        {
            int v1=A[i][j] , v2=A[i][j];

            if((i+1)<n && j<n && j<=(i+1))
            {
                v1+=dp[i+1][j];
            }
            if((i+1)<n && (j+1)<n && (j+1)<=(i+1))
            {
                v2+=dp[i+1][j+1];
            }

            dp[i][j] = max(v1,v2);
        }
    }

    return dp[0][0];
}
