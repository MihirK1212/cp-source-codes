// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

//Find the Longest Repeating Subsequence

 // } Driver Code Ends
class Solution {
	public:
		int LongestRepeatingSubsequence(string str){
		    string str1=str,str2=str;
		    int m = str1.length();
		    int n = str2.length();
		    int i,j;
		    
		    int dp[m+1][n+1];
		    
		    memset(dp,0,sizeof(dp));
		    
		    for(i=1;i<=m;i++)
		    {
		        for(j=1;j<=n;j++)
		        {
		            if(str1[i-1]==str2[j-1] && i!=j){dp[i][j] = dp[i-1][j-1] + 1;}
		            else{dp[i][j] = max(dp[i-1][j],dp[i][j-1]);}
		        }
		    }
		    
		    return dp[m][n];
		}

};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		string str;
		cin >> str;
		Solution obj;
		int ans = obj.LongestRepeatingSubsequence(str);
		cout << ans << "\n";
	}
	return 0;
}  // } Driver Code Ends