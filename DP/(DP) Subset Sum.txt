#include <bits/stdc++.h>
using namespace std;

#define ll long long 
#define ld long double 
#define vll vector<long long>
#define vi vector<int>
// #define f first
// #define s second
#define pb push_back
#define printoneline(arr) for(long long i=0;i<arr.size();i++){cout<<arr[i]<<" ";} cout<<"\n";
#define sort(a) sort(a.begin(),a.end());
#define rsort(a) sort(a.rbegin(),a.rend());
#define reverse(a) reverse(a.begin(),a.end());
#define input(arr) for(long long i=0;i<arr.size();i++){cin>>arr[i];}
typedef vector<pair<ll,ll>> vpll;
typedef vector<pair<int,int>> vpii;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef pair<int,pair<int,int>> ppi;

ll inf=std::numeric_limits<long long>::max();


int main()
{
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);
    
    ll n,sum,i,s;
    cin>>n>>sum;
    vll a(n+1,0);
    
    for(i=1;i<=n;i++){cin>>a[i];}
    
    
    
    int dp[n+1][sum+1];
    
    //dp[i][s]= is sum 's' possible using first 'i' elements
    
    
    for(i=0;i<=n;i++)
    {
        for(s=0;s<=sum;s++)
        {
		if(i==0)
               {
                   if(s==0){dp[i][s]=1;}
                   else{dp[i][s]=0;}
                  continue;
               }
            bool v1 = false , v2 = false;
            
            //Using ith element
            if(s>=a[i]){v1 = dp[i-1][s-a[i]];}
            
            //Not using ith element
            v2 = dp[i-1][s];
            
            dp[i][s]= v1 || v2;
            
        }
    }
    
    if(dp[n][sum]){cout<<"Yes\n";}
    else{cout<<"No\n";}
    
    // s = sum;
    
    // for(i=n;i>=1;i--)
    // {
    //     if(s>0 && dp[s][i]){cout<<a[i]<<" "; s-=a[i];}
    // }
    // cout<<"\n";
    
    
    return 0;
}
