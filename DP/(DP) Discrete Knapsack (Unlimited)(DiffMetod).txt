// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int knapSack(int N, int W, int val[], int wt[])
    {
        int w,i;
        int max_val[N+1][W+1];
        memset(max_val,0,sizeof(max_val));
        
        for(i=1;i<=N;i++)
        {
            for(w=1;w<=W;w++)
            {
                int v1=-1,v2=-1;
                
                //If 'i' is used then it is always used
                if(w>=wt[i-1]){v1=max_val[i][w-wt[i-1]]+val[i-1];}
                
                //If 'i' is not used then it is never used
                v2=max_val[i-1][w];
                
                max_val[i][w] = max(v1,v2);
            }
        }
        
        
        
        return max_val[N][W];
        
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N, W;
        cin>>N>>W;
        int val[N], wt[N];
        for(int i = 0;i < N;i++)
            cin>>val[i];
        for(int i = 0;i < N;i++)
            cin>>wt[i];
        
        Solution ob;
        cout<<ob.knapSack(N, W, val, wt)<<endl;
    }
    return 0;
}  // } Driver Code Ends