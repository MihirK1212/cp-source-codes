//https://www.interviewbit.com/problems/queen-attack/
//Number of queens that can attack a position

vector<vector<int> > Solution::queenAttack(vector<string> &A) 
{
    int m = A.size();
    int n = A[0].size();

    vector<vector<int>> dp(m,vector<int>(n,0));

    vector<pair<int,int>> moves = {{0,1},{1,1},{1,0},{1,-1},{0,-1},{-1,-1},{-1,0},{-1,1}};

    for(int i=0;i<m;i++)
    {
        for(int j=0;j<n;j++)
        {
            for(auto p : moves)
            {   
                int x = i + p.first , y = j + p.second; 
                
                while(x>=0 && x<m && y>=0 && y<n)
                {
                    if(A[x][y]=='1'){dp[i][j]++; break;}
                    x = x + p.first ; y = y + p.second; 
                }
            }
        }
    }


    return dp;
}
