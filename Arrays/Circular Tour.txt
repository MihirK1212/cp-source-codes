// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

struct petrolPump
{
    int petrol;
    int distance;
};


 // } Driver Code Ends
/*
The structure of petrolPump is 
struct petrolPump
{
    int petrol;
    int distance;
};*/

/*You are required to complete this method*/
class Solution{
  public:
  
    //Function to find starting point where the truck can start to get through
    //the complete circle without exhausting its petrol in between.
    int tour(petrolPump p[],int n)
    {
        int times = 2;
        int currMin=0;
        
        int i=0;
        int currPetrol=0;
        
        
        while(times>0)
        {
            bool increment = false;
            
            int petrol = p[i].petrol;
            int distance = p[i].distance;
            
            if((currPetrol+petrol)>=distance)
            {
                currPetrol+=petrol;
                currPetrol-=distance;
                i=(i+1)%n;
            }
            else
            {
                currPetrol=0;
                increment=true;
                i=(i+1)%n;
            }
            
            if(i==(n-1)){times--;}
            
            if(i==currMin && !increment){return currMin;}
            if(increment){currMin=i; if(currMin==n){break;}}
        }
        
        return -1;
    }
};



// { Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        petrolPump p[n];
        for(int i=0;i<n;i++)
            cin>>p[i].petrol>>p[i].distance;
        Solution obj;
        cout<<obj.tour(p,n)<<endl;
    }
}
  // } Driver Code Ends