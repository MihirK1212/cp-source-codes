// { Driver Code Starts
#include<bits/stdc++.h>

using namespace std;


 // } Driver Code Ends
class Solution{

    // Function to find the trapped water between the blocks.
    public:
    long long trappingWater(int arr[], int n)
    {
        vector<int> lMaxUpto(n,-1) , rMaxUpto(n,-1);
        lMaxUpto[0]=arr[0]; rMaxUpto[n-1]=arr[n-1];
        
        for(int i=1;i<n;i++){lMaxUpto[i]=max(arr[i],lMaxUpto[i-1]);}
        for(int i=n-2;i>=0;i--){rMaxUpto[i]=max(arr[i],rMaxUpto[i+1]);}
        
        long long ans=0;
        
        for(int i=0;i<n;i++)
        {
            //calculate water stored above bar i
            int h = min(lMaxUpto[i],rMaxUpto[i]);
            if(h<=arr[i]){continue;}
            
            ans+=(long long)(h-arr[i]);
        }
        
        return ans;
    }
};

// { Driver Code Starts.

int main(){
    
    int t;
    //testcases
    cin >> t;
    
    while(t--){
        int n;
        
        //size of array
        cin >> n;
        
        int a[n];
        
        //adding elements to the array
        for(int i =0;i<n;i++){
            cin >> a[i];            
        }
        Solution obj;
        //calling trappingWater() function
        cout << obj.trappingWater(a, n) << endl;
        
    }
    
    return 0;
}  // } Driver Code Ends