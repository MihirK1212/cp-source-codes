#include <bits/stdc++.h>
using namespace std;

//https://codeforces.com/contest/1528/problem/A

#define ll long long 
#define vll vector<long long>
#define vi vector<int>
#define f first
#define s second
#define pb push_back
#define printoneline(arr) for(long long i=0;i<arr.size();i++){cout<<arr[i]<<" ";} cout<<"\n";
#define sort(a) sort(a.begin(),a.end());
#define rsort(a) sort(a.rbegin(),a.rend());
#define reverse(a) reverse(a.begin(),a.end());
#define input(arr) for(long long i=0;i<arr.size();i++){cin>>arr[i];}


void dfs(map<ll,vll> &graph,ll node,vector<bool> &visited,vector<vll> &dp,vll &l,vll &r)
{
    visited[node]=true;
    dp[node][0]=dp[node][1]=0;
    
    for(auto x:graph[node])
    {
        if(!visited[x])
        {
            dfs(graph,x,visited,dp,l,r);
            dp[node][0]+=max((dp[x][0]+abs(l[x]-l[node])),(dp[x][1]+abs(r[x]-l[node])));
            dp[node][1]+=max((dp[x][0]+abs(l[x]-r[node])),(dp[x][1]+abs(r[x]-r[node])));
        }
        
    }
}



int main()
{
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);
    ll t;
    cin>>t;
    while(t--)
    {
        ll n,i;
        cin>>n;
        map<ll,vll> graph;
        vll l(n+1),r(n+1);
        
       for(i=1;i<=n;i++)
        {
            cin>>l[i]>>r[i];
        }
        for(i=1;i<n;i++)
        {
            ll a,b;
            cin>>a>>b;
            graph[a].pb(b);
            graph[b].pb(a);
        }
        
        ll start;
        
        start=1;
        
        vector<vll> dp(n+1,vll(2));
        
        vector<bool> visited(n+1,false);
        
        
        
        dp[start][0]=dp[start][1]=0;
        
        dfs(graph,start,visited,dp,l,r);
        
        cout<<max(dp[start][0],dp[start][1])<<"\n";
    }
    return 0;
}