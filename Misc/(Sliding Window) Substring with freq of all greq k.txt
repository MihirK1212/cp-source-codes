//Find the largest substring for which each character in it has frequency >= k
// https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/

class Solution {
public:
    int longestSubstring(string s, int k) 
    {
        int ans=0;
        
        int len = s.length();
        
        for(int h=1;h<=26;h++)
        {
            int start = 0, end = 0;
            
            vector<int> freq(200,0);
        
            int num_chars = 0 , count_geq = 0;

            freq[s[0]]++;
            if(freq[s[0]]==1){num_chars++;}
            if(freq[s[0]]==k){count_geq++;}

            while(start<=end && end<len)
            {
                if(num_chars==h && count_geq==h){ans = max(ans,end-start+1);}

                if(num_chars>h)
                {
                    freq[s[start]]--;
                    if(freq[s[start]]==0){num_chars--;}
                    if(freq[s[start]]==(k-1)){count_geq--;}
                    start++;
                }
                
                else
                {
                    end++;
                    if(end<len)
                    {
                        freq[s[end]]++;
                        if(freq[s[end]]==1){num_chars++;}
                        if(freq[s[end]]==k){count_geq++;}
                    }
                }
            }
        }
        
       return ans;
        
    }
};