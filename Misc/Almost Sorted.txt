//https://www.hackerrank.com/challenges/almost-sorted/problem
#include <bits/stdc++.h>
using namespace std;

#define ll long long 
#define ld long double 
#define vll vector<long long>
#define vi vector<int>
#define f first
#define s second
#define pb push_back
#define printoneline(arr) for(long long i=0;i<arr.size();i++){cout<<arr[i]<<" ";} cout<<"\n";
#define sort(a) sort(a.begin(),a.end());
#define rsort(a) sort(a.rbegin(),a.rend());
#define reverse(a) reverse(a.begin(),a.end());
#define input(arr) for(long long i=0;i<arr.size();i++){cin>>arr[i];}

bool sorted(vll &a)
{
    for(ll i=0;i<((a.size())-1);i++)
    {
        if(a[i]>a[i+1]){return false;}
    }
    
    return true;
}

bool swap_sorts(vll a,ll lb,ll ub)
{
    ll temp=a[lb];
    a[lb]=a[ub];
    a[ub]=temp;
    
    if(sorted(a))
    {
        cout<<"yes\n";
        cout<<"swap "<<lb+1<<" "<<ub+1<<"\n";
        return true;
    }
    else
    {
        return false;
    }
}

bool reverse_sorts(vll a,ll lb,ll ub)
{
    vll b(ub-lb+1);
    for(ll i=(ub);i>=lb;i--)
    {
        b[ub-i]=a[i];
    }
    for(ll i=lb;i<=ub;i++)
    {
        a[i]=b[i-lb];
    }
    
    if(sorted(a))
    {
        cout<<"yes\n";
        cout<<"reverse "<<(lb+1)<<" "<<(ub+1)<<"\n";
        return true;
    }
    else
    {
        return false;
    }
}


int main()
{
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);
    ll n,i;
    cin>>n;
    vll a(n);
    input(a);
    
    bool check=false;
    
    if(!check)
    {
        //Check already sorted
        if(sorted(a))
        {
            cout<<"yes\n";
            check=true;
        }
    }
    
    if(!check)
    {
        //Check Swap
        ll start_check=-1;
        for(i=1;i<n;i++)
        {
            if(a[i]<a[i-1])
            {
                start_check=i-1;
                break;
            }
        }
        
        ll end_check=start_check+1;
        
        for(i=(start_check);i<=(n-2);i++)
        {
            if(a[i]>a[i+1])
            {
                end_check=i+1;
            }
        }
        
        // cout<<a[start_check]<<" "<<a[end_check]<<"\n";
        // cout<<start_check<<" "<<end_check<<"\n"; 
        
        if(swap_sorts(a,start_check,end_check)){check=true;}
    }
    
    if(!check)
    {
        //Check reverse
        ll lb_ans=-1,ub_ans=-1,max_len=-1;
        ll lb=0,ub=0;
        for(i=0;i<=(n-2);i++)
        {
            if(a[i]>=a[i+1]){ub++;}
            
            else
            {
                lb=ub=i+1;
            }
                
            if(((ub-lb)+1)>max_len)
            {
                max_len=ub-lb+1;
                lb_ans=lb;
                ub_ans=ub;
            }
        }
        
        if(reverse_sorts(a,lb_ans,ub_ans)){check=true;}
    }
    
    if(!check){cout<<"no\n";}
    
    return 0;
}
