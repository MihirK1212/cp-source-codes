// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution {
  public:
    void dfs(vector<int> adj[],int u,int parent,vector<bool>&visited,vector<bool>&isAP,
                                    vector<int>&discTime,vector<int>&minChildTime,int t)
    {
        visited[u] = true;
        discTime[u]=minChildTime[u] = t;
        t++;
        
        int children = 0;
        
        for(auto v : adj[u])
        {
            if(!visited[v])
            {
                children++;
                dfs(adj,v,u,visited,isAP,discTime,minChildTime,t);
                
                minChildTime[u]=min(minChildTime[u],minChildTime[v]);
                
                if(parent!=-1 && minChildTime[v]>=discTime[u])
                {
                    isAP[u] = true;
                }
            }
            else if(v!=parent)
            {
                minChildTime[u]=min(minChildTime[u],discTime[v]);
            }
        }
        
        if(parent==-1 && children>1){isAP[u]=true;}
    }
    
    vector<int> articulationPoints(int V, vector<int>adj[]) 
    {
        vector<bool> visited(V+1,false);
        vector<int> discTime(V+1,-1);
        vector<int> minChildTime(V+1,-1);
        vector<bool> isAP(V+1,false);
        
        int t = 1;
        
        for(int u=0;u<V;u++)
        {
            if(!visited[u]){dfs(adj,u,-1,visited,isAP,discTime,minChildTime,t);}
        }
        
        vector<int> ans;
        
        for(int i=0;i<V;i++)
        {
            if(isAP[i]){ans.push_back(i);}
        }
        
        if(ans.size()==0){ans.push_back(-1);}
        
        return ans;
    }
};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int V, E;
		cin >> V >> E;
		vector<int>adj[V];
		for(int i = 0; i < E; i++){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		Solution obj;
		vector<int> ans = obj.articulationPoints(V, adj);
		for(auto i: ans)cout << i << " ";
		cout << "\n";
	}
	return 0;
}  // } Driver Code Ends