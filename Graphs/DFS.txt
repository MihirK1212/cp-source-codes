#include <bits/stdc++.h>
using namespace std;

#define ll long long 
#define vll vector<long long>
#define f first
#define s second
#define pb push_back
#define printoneline(arr,a,b) for(long long i=a;i<=b;i++){cout<<arr[i]<<" ";} cout<<"\n";
#define sort(a) sort(a.begin(),a.end());
#define rsort(a) sort(a.rbegin(),a.rend());
#define reverse(a) reverse(a.begin(),a.end());

ll dfs(map<ll,vll> &graph,ll node,vector<bool> &visited)
{
    visited[node]=true;
    ll numvisited=1;
    for(auto x:graph[node])
    {
        if(!visited[x])
        {
            //cout<<"Visited "<<x<<"\n";
            numvisited=numvisited+dfs(graph,x,visited);
        }
    }
    //cout<<"Dead-end "<<node<<"\n";
    return numvisited;
}


int main()
{
    map<ll,vll> graph;
    
    
    graph[0]={1,4,5};
    graph[1]={0,2,3,4};
    graph[2]={1};
    graph[3]={1,4};
    graph[4]={0,1,3};
    graph[5]={0,6,9};
    graph[6]={5,9};
    graph[7]={8};
    graph[8]={7};
    graph[9]={5,6};
    
    
    vector<bool> visited(10,false);
    
    ll start;
    
    cout<<"Enter starting node\n";
    cin>>start;
    
    cout<<"Number of connected nodes with node "<<start<<" are "<<dfs(graph,start,visited)<<"\n";
    
    return 0;
}
